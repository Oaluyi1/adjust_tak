apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.release.name }}-deployment
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.service.name }}-{{ .Values.version | default .Chart.AppVersion }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: {{ .Values.service.name }}-container
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        # command: ["gunicorn"]
        # args: ["--bind 0.0.0.0:5000 app.app:app && app/apphealthy.sh"]
        ports:
        - name: http
          containerPort: {{ .Values.service.externalPort }}
          protocol: TCP
        
        livenessProbe:
          httpGet:
            path: /hello
            port: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
      {{- if .Values.container.resources -}}
        resources:
          {{- toYaml .Values.resources | nindent 12   -}}
      {{- end -}}
        volumeMounts:
          - mountPath: "/app"
            name: app-volume
            readOnly: true
             
          # limits:
          #   cpu: {{ .Values.resources.limits.cpu }}
          #   memory: {{ .Values.resources.limits.memory }}
          # requests:
          #   cpu: {{ .Values.resources.requests.cpu }}
          #   memory: {{ .Values.resources.requests.memory }}
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      volumes:
      - name: app-volume
        emptyDir:
          medium: Memory
